Algorithme : Produire un résultat

Variables locales :
    donnee (entier)
    resultat (entier)
Instructions :
    LIRE donnee
    [ énoncé(s) du traitement ]
    ÉCRIRE resultat
    FIN (produireResultat)


Algorithme : Faire la somme de 2 nombres entiers

Variables locales :
    nombre1, nombre2 (entiers)
    somme (entier)
    fichier (fichier de texte)
Instructions :
    OUVRIR fichier en LECTURE ("donnees.dat")
    LIRE dans fichier, nombre1, nombre2
    somme ← nombre1 + nombre2
    ÉCRIRE somme
    FERMER fichier
    FIN (somme2nombres)


Algorithme : Afficher “positif” si nombre lu > 0

Variables locales :
    nombre (entier)
Instructions :
    LIRE nombre
    SI nombre > 0
    ALORS ÉCRIRE “positif”
    FIN (Afficher)


Algorithme : Afficher “positif” si nombre lu > 0 sinon afficher “négatif”

Variables locales :
    nombre (entier)
    resultat (chaîne de 7 caractères)
Instructions :
    LIRE nombre
    SI nombre > 0
        ALORS resultat ← “positif”
        SINON resultat ← “négatif”
    ECRIRE resultat
    FIN (Afficher)    


Emboitement des conditions

SI condition
    ALORS SI condition
        ALORS énoncé(s)
        SINON SI condition
            ALORS énoncé(s)
            SINON énoncé(s)
    SINON énoncé(s)



Algorithme : Afficher la plus petite valeur parmi 3 différentes

Variables locales :
    donnee1, donnee2, donnee3 (entiers)
    resultat (entier)
Instructions :
    LIRE donnee1, donnee2, donnee3
    SI donnee1 < donnee2
        ALORS SI donnee1 < donnee3
            ALORS resultat ← donnee1
            SINON resultat ← donnee3
        SINON SI donnee2 > donnee3
            ALORS resultat ← donnee3
            SINON resultat ← donnee2
    ÉCRIRE resultat
    FIN (afficherResultat)



Algorithme : Attribuer une valeur à resultat


Variables locales :
    donnee, resultat (entiers)
Instructions :
    LIRE donnee
    SELON donnee
        0 :     resultat ← 1
        1 :     resultat ← 0
        2 :     resultat ← 5
    SINON:    resultat ← 10
    ÉCRIRE resultat


Algorithme : Compter le nombre de valeurs lues

Variables locales :
    compteur, donnee (entiers)
Instructions :
    compteur ← 0
    LIRE donnee
    TANT QUE donnee > 0
        compteur ← compteur + 1
        LIRE donnee
    ÉCRIRE compteur
    FIN (compterValeurs)


Algorithme : Compter le nombre de valeurs lues

Variables locales :
    compteur, donnee (entiers)
Instructions :
    compteur ← 0
    RÉPÉTER
        LIRE donnee
        SI donnee > 0 ALORS
            compteur ← compteur + 1
    JUSQU'À donnee ≤ 0
    ÉCRIRE compteur
    FIN (CompterValeurs)


Algorithme : Obtenir la somme de 10 nombres

Variables locales :
    somme, compteur, nombre (entiers)
Instructions :
    somme ← 0
    POUR compteur ← 1, 10, PAS 1
        LIRE nombre
        somme ← somme + nombre
    ÉCRIRE somme
    FIN (obtenirSomme)


Pseudo-code d'une méthode


Nom de la méthode ( ) :
Description (ligne de commentaire qui explique ce que fait le module) :
En-tête : avec paramètres (↓,↑,↔) et valeur de retour
Corps :
    Variables locales
    énoncé(s)
    RETOURNER Valeur ( ou RETOUR seul si pas de valeur retournée)


EXEMPLE :


Nom de la méthode( ) : Somme
Description : Fonction servant à fournir une somme à partir de deux entiers.
En-tête : Entier Somme ( nombre1 ↓, nombre2 ↓)
Variables locales :
    somme (entier)
Instructions :
    somme Å nombre1 + nombre2
    RETOURNER somme


Exercices

1er jet

ouvrir le fichier texte
pour chaque ligne de ce fichier
    rechercher le mot « truc »
    effacer les caractères composant ce mot
    insérer les caractères qui composent le mot de remplacement
fermer le fichier texte

2eme jet

ouvrir le fichier texte
pour chaque ligne de ce fichier
    rechercher le mot « truc » en faisant ceci
        lire le caractère de la ligne
        si le caractère est un « t », alors
            si les caractères suivants son « ruc »
            alors une occurrence du mot est trouvée
            effacer les 4 caractères
            insérer les caractères du mot de remplacement
fermer le fichier texte

3eme jet

ouvrir le fichier texte
demander à l'utilisateur le mot qui doit être remplacé
demander à l'utilisateur le mot de remplacement
pour chaque ligne de fichier
    rechercher le mot à remplacer en faisant ceci
        lire le caractère de la ligne
        si le caractère correspond à la première lettre du mot recherché, alors
            si les caractères suivants complètent le mot à remplacer
            alors une occurrence du mot est trouvée
    compter les occurrences du mot dans le texte
    effacer les caractères des occurrences
    insérer les caractères du nouveau mot à chaque endroit où se trouvait une occurrence du mot à remplacer
    afficher le nombre d'occurrences qui ont été remplacées
fermer le fichier texte